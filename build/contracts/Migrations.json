{
  "contractName": "Migrations",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "last_completed_migration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "completed",
          "type": "uint256"
        }
      ],
      "name": "setCompleted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "new_address",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"last_completed_migration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"completed\",\"type\":\"uint256\"}],\"name\":\"setCompleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_address\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Migrations.sol\":\"Migrations\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Migrations.sol\":{\"keccak256\":\"0x75817ce6ff47bf29ca46a9030e0b43062549e27d24e670c72ce492499d2d7b61\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c0c0c456939fbe764c87295bec8ff4a7074da4eff023b1739f5fbf24af06a27c\",\"dweb:/ipfs/QmdWbK7GzdjNmET3AvyzJcRLawMAHmLP4HFzPvi1bZQwEA\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060008054600160a060020a03191633179055610255806100326000396000f3fe608060405234801561001057600080fd5b5060043610610068577c010000000000000000000000000000000000000000000000000000000060003504630900f010811461006d578063445df0ac146100825780638da5cb5b1461009e578063fdacd576146100e3575b600080fd5b61008061007b3660046101c9565b6100f6565b005b61008b60015481565b6040519081526020015b60405180910390f35b6000546100be9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610095565b6100806100f1366004610206565b6101a5565b60005473ffffffffffffffffffffffffffffffffffffffff1633036101a2576001546040517ffdacd576000000000000000000000000000000000000000000000000000000008152829173ffffffffffffffffffffffffffffffffffffffff83169163fdacd5769161016e9160040190815260200190565b600060405180830381600087803b15801561018857600080fd5b505af115801561019c573d6000803e3d6000fd5b50505050505b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633036101a257600155565b6000602082840312156101db57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146101ff57600080fd5b9392505050565b60006020828403121561021857600080fd5b503591905056fea264697066735822122090dc39b90be315e8e5082f48330c4d45dfeef1911e085f9f37a381132bd3eae364736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610068577c010000000000000000000000000000000000000000000000000000000060003504630900f010811461006d578063445df0ac146100825780638da5cb5b1461009e578063fdacd576146100e3575b600080fd5b61008061007b3660046101c9565b6100f6565b005b61008b60015481565b6040519081526020015b60405180910390f35b6000546100be9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610095565b6100806100f1366004610206565b6101a5565b60005473ffffffffffffffffffffffffffffffffffffffff1633036101a2576001546040517ffdacd576000000000000000000000000000000000000000000000000000000008152829173ffffffffffffffffffffffffffffffffffffffff83169163fdacd5769161016e9160040190815260200190565b600060405180830381600087803b15801561018857600080fd5b505af115801561019c573d6000803e3d6000fd5b50505050505b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633036101a257600155565b6000602082840312156101db57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146101ff57600080fd5b9392505050565b60006020828403121561021857600080fd5b503591905056fea264697066735822122090dc39b90be315e8e5082f48330c4d45dfeef1911e085f9f37a381132bd3eae364736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:923:4",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:4",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:239:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:4"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:4"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "286:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "289:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "279:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "279:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "279:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "231:42:4",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:54:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:65:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:73:4"
                  },
                  "nodeType": "YulIf",
                  "src": "200:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "302:15:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "312:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "302:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:4",
                "type": ""
              }
            ],
            "src": "14:309:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "429:76:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "439:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "451:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "462:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "447:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "447:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "439:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "481:9:4"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "492:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "474:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:25:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "474:25:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "398:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "409:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "420:4:4",
                "type": ""
              }
            ],
            "src": "328:177:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:125:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "621:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "633:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "644:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "629:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "629:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "621:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "663:9:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "678:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "686:42:4",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "674:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "674:55:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "656:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "656:74:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "656:74:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "580:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "591:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "602:4:4",
                "type": ""
              }
            ],
            "src": "510:226:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "811:110:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "857:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "866:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "869:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "859:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "859:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "859:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "832:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "841:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "828:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "828:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "853:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "824:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "821:52:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "882:33:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "905:9:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "892:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "892:23:4"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "882:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "777:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "788:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "800:6:4",
                "type": ""
              }
            ],
            "src": "741:180:4"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n}",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "63:476:2:-:0;;;218:43;;;;;;;;;-1:-1:-1;238:5:2;:18;;-1:-1:-1;;;;;;238:18:2;246:10;238:18;;;63:476;;;;;;",
  "deployedSourceMap": "63:476:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;372:165;;;;;;:::i;:::-;;:::i;:::-;;111:39;;;;;;;;;474:25:4;;;462:2;447:18;111:39:2;;;;;;;;87:20;;;;;;;;;;;;686:42:4;674:55;;;656:74;;644:2;629:18;87:20:2;510:226:4;265:103:2;;;;;;:::i;:::-;;:::i;372:165::-;201:5;;;;187:10;:19;183:26;;507:24:::1;::::0;485:47:::1;::::0;;;;467:11;;485:21:::1;::::0;::::1;::::0;::::1;::::0;:47:::1;::::0;::::1;;474:25:4::0;;;462:2;447:18;;328:177;485:47:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;428:109;183:26:::0;372:165;:::o;265:103::-;201:5;;;;187:10;:19;183:26;;327:24:::1;:36:::0;265:103::o;14:309:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;231:42;224:5;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:4:o;741:180::-;800:6;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;-1:-1:-1;892:23:4;;741:180;-1:-1:-1;741:180:4:o",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.18;\n\ncontract Migrations {\n  address public owner;\n  uint256 public last_completed_migration;\n\n  modifier restricted() {\n    if (msg.sender == owner) _;\n  }\n\n  constructor() {\n    owner = msg.sender;\n  }\n\n  function setCompleted(uint completed) public restricted {\n    last_completed_migration = completed;\n  }\n\n  function upgrade(address new_address) public restricted {\n    Migrations upgraded = Migrations(new_address);\n    upgraded.setCompleted(last_completed_migration);\n  }\n}",
  "sourcePath": "/Users/antonio/Desktop/Project/supplychain-blockchain/contracts/Migrations.sol",
  "ast": {
    "absolutePath": "project:/contracts/Migrations.sol",
    "exportedSymbols": {
      "Migrations": [
        591
      ]
    },
    "id": 592,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 535,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Migrations",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 591,
        "linearizedBaseContracts": [
          591
        ],
        "name": "Migrations",
        "nameLocation": "72:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 537,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "102:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 591,
            "src": "87:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 536,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "87:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "445df0ac",
            "id": 539,
            "mutability": "mutable",
            "name": "last_completed_migration",
            "nameLocation": "126:24:2",
            "nodeType": "VariableDeclaration",
            "scope": 591,
            "src": "111:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 538,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "111:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 547,
              "nodeType": "Block",
              "src": "177:37:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 541,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "187:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "191:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "187:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 543,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "201:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "187:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 546,
                  "nodeType": "IfStatement",
                  "src": "183:26:2",
                  "trueBody": {
                    "id": 545,
                    "nodeType": "PlaceholderStatement",
                    "src": "208:1:2"
                  }
                }
              ]
            },
            "id": 548,
            "name": "restricted",
            "nameLocation": "164:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:2:2"
            },
            "src": "155:59:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 556,
              "nodeType": "Block",
              "src": "232:29:2",
              "statements": [
                {
                  "expression": {
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 551,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "238:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 552,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "246:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "250:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "246:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "238:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "238:18:2"
                }
              ]
            },
            "id": 557,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:2"
            },
            "returnParameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "232:0:2"
            },
            "scope": 591,
            "src": "218:43:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 568,
              "nodeType": "Block",
              "src": "321:47:2",
              "statements": [
                {
                  "expression": {
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 564,
                      "name": "last_completed_migration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 539,
                      "src": "327:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 565,
                      "name": "completed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "354:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "327:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 567,
                  "nodeType": "ExpressionStatement",
                  "src": "327:36:2"
                }
              ]
            },
            "functionSelector": "fdacd576",
            "id": 569,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 562,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 561,
                  "name": "restricted",
                  "nameLocations": [
                    "310:10:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 548,
                  "src": "310:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "310:10:2"
              }
            ],
            "name": "setCompleted",
            "nameLocation": "274:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "completed",
                  "nameLocation": "292:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 569,
                  "src": "287:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "286:16:2"
            },
            "returnParameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "321:0:2"
            },
            "scope": 591,
            "src": "265:103:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 589,
              "nodeType": "Block",
              "src": "428:109:2",
              "statements": [
                {
                  "assignments": [
                    578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 578,
                      "mutability": "mutable",
                      "name": "upgraded",
                      "nameLocation": "445:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 589,
                      "src": "434:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Migrations_$591",
                        "typeString": "contract Migrations"
                      },
                      "typeName": {
                        "id": 577,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 576,
                          "name": "Migrations",
                          "nameLocations": [
                            "434:10:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 591,
                          "src": "434:10:2"
                        },
                        "referencedDeclaration": 591,
                        "src": "434:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Migrations_$591",
                          "typeString": "contract Migrations"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 582,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 580,
                        "name": "new_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "467:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 579,
                      "name": "Migrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 591,
                      "src": "456:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Migrations_$591_$",
                        "typeString": "type(contract Migrations)"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "456:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Migrations_$591",
                      "typeString": "contract Migrations"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "434:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 586,
                        "name": "last_completed_migration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 539,
                        "src": "507:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 583,
                        "name": "upgraded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "485:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Migrations_$591",
                          "typeString": "contract Migrations"
                        }
                      },
                      "id": 585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "494:12:2",
                      "memberName": "setCompleted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 569,
                      "src": "485:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "485:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "485:47:2"
                }
              ]
            },
            "functionSelector": "0900f010",
            "id": 590,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 574,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 573,
                  "name": "restricted",
                  "nameLocations": [
                    "417:10:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 548,
                  "src": "417:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "417:10:2"
              }
            ],
            "name": "upgrade",
            "nameLocation": "381:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 571,
                  "mutability": "mutable",
                  "name": "new_address",
                  "nameLocation": "397:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 590,
                  "src": "389:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "388:21:2"
            },
            "returnParameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "428:0:2"
            },
            "scope": 591,
            "src": "372:165:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 592,
        "src": "63:476:2",
        "usedErrors": []
      }
    ],
    "src": "37:502:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "1680606490275": {
      "events": {},
      "links": {},
      "address": "0x180aC5cBEa298eD332e2A5c03Cd29fD69866b1ED",
      "transactionHash": "0xf79e13feecd01c1b0a88328e4b6eaac5216b09223ebe390aba59075b7a8c3183"
    },
    "1682326464056": {
      "events": {},
      "links": {},
      "address": "0xa6C5c9e2Ec5cc3f473cC9719d4D7Ee725280087E",
      "transactionHash": "0x08e2772b1e49ba51ff69351f0db5fb4a6add3797014c74604d2233cd03d027bc"
    },
    "1682940360613": {
      "events": {},
      "links": {},
      "address": "0x46e0F3678ad369595E816C3D25A3867415D8Acee",
      "transactionHash": "0x328b2aab8e95d39daf07a582fdff227962410a3121dade8727e5900f77a3f0d7"
    }
  },
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-05-01T11:28:10.222Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}